services:
  #jaeger链路追踪
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
      - LOG_LEVEL=debug
    networks:
      - go-lottery-network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: go-lottery-zookeeper
    environment:
      TZ: Asia/Shanghai
    restart: always
    ports:
      - "2181:2181"
    networks:
      - go-lottery-network

  kafka:
    image: wurstmeister/kafka
    container_name: go-lottery-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_RUN_PARTITIONS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      TZ: Asia/Shanghai
    restart: always
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data
    networks:
      - go-lottery-network
    depends_on:
      - zookeeper

  # 搜集kafka业务日志、存储prometheus监控数据
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: elasticsearch
    user: root
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - TZ=Asia/Shanghai
    volumes:
      - ./data/elasticsearch/data:/usr/share/elasticsearch/data
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - go-lottery-network

  # 消费kafka中filebeat收集的数据输出到es
  go-stash:
    image: kevinwan/go-stash:1.0
    container_name: go-stash
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    user: root
    restart: always
    volumes:
      - ./deploy/go-stash/etc:/app/etc
    networks:
      - go-lottery-network
    depends_on:
      - elasticsearch
      - kafka

  # 查看elasticsearch数据
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.4
    container_name: kibana
    environment:
      - elasticsearch.hosts=http://elasticsearch:9200
      - TZ=Asia/Shanghai
    restart: always
    networks:
      - go-lottery-network
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  filebeat:
    image: elastic/filebeat:8.12.2
    container_name: filebeat
    environment:
      TZ: Asia/Shanghai
    user: root
    restart: always
    entrypoint: "filebeat -e -strict.perms=false"  # 解决配置文件权限问题
    volumes:
      - ./deploy/filebeat/conf/filebeat.yml:/usr/share/filebeat/filebeat.yml
      # 此处需指定docker的containers目录，取决于你docker的配置
      - /var/lib/docker/containers:/var/lib/docker/containers
    networks:
      - go-lottery-network
    depends_on:
      - kafka

  mysql:
    image: mysql:8.0.40
    container_name: go-lottery-mysql
    user: root
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
    ports:
      - "33069:3306"
    volumes:
      # 数据挂载
      - ./data/mysql/data:/var/lib/mysql
      # 挂载SQL文件的目录
      - ./deploy/sql:/docker-entrypoint-initdb.d
    command:
      # 将mysql8.0默认密码策略 修改为 原先 策略 (mysql8.0对其默认策略做了更改 会导致密码无法匹配)
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --skip-name-resolve
    privileged: true
    restart: always
    networks:
      - go-lottery-network

  redis:
    image: redis:7-alpine
    container_name: go-lottery-redis
    ports:
      - "36379:6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      # 数据文件
      - ./data/redis/data:/data:rw
    command: "redis-server --requirepass root --appendonly yes"
    privileged: true
    restart: always
    networks:
      - go-lottery-network

  prometheus:
    image: prom/prometheus:v2.28.1
    container_name: prometheus
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    volumes:
      - ./deploy/prometheus/server/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: always
    user: root
    ports:
      - 9090:9090
    networks:
      - go-lottery-network

  grafana:
    image: grafana/grafana:8.0.6
    container_name: grafana
    hostname: grafana
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    restart: always
    user: root
    volumes:
      - ./data/grafana/data:/var/lib/grafana
    ports:
      - "3001:3000"
    networks:
      - go-lottery-network

networks:
  go-lottery-network:
    name: go-lottery-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16