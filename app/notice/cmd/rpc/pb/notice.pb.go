// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: app/notice/cmd/rpc/pb/notice.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NoticeLotteryDrawReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIds       []int64                `protobuf:"varint,1,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
	LotteryId     int64                  `protobuf:"varint,2,opt,name=lotteryId,proto3" json:"lotteryId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoticeLotteryDrawReq) Reset() {
	*x = NoticeLotteryDrawReq{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoticeLotteryDrawReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeLotteryDrawReq) ProtoMessage() {}

func (x *NoticeLotteryDrawReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeLotteryDrawReq.ProtoReflect.Descriptor instead.
func (*NoticeLotteryDrawReq) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{0}
}

func (x *NoticeLotteryDrawReq) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *NoticeLotteryDrawReq) GetLotteryId() int64 {
	if x != nil {
		return x.LotteryId
	}
	return 0
}

type NoticeLotteryDrawResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoticeLotteryDrawResp) Reset() {
	*x = NoticeLotteryDrawResp{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoticeLotteryDrawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeLotteryDrawResp) ProtoMessage() {}

func (x *NoticeLotteryDrawResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeLotteryDrawResp.ProtoReflect.Descriptor instead.
func (*NoticeLotteryDrawResp) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{1}
}

type NoticeSubscribePreference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Openid        string                 `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	TemplateId    string                 `protobuf:"bytes,3,opt,name=templateId,proto3" json:"templateId,omitempty"`
	AcceptCount   int64                  `protobuf:"varint,4,opt,name=acceptCount,proto3" json:"acceptCount,omitempty"`
	CreateTime    int64                  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    int64                  `protobuf:"varint,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoticeSubscribePreference) Reset() {
	*x = NoticeSubscribePreference{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoticeSubscribePreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeSubscribePreference) ProtoMessage() {}

func (x *NoticeSubscribePreference) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeSubscribePreference.ProtoReflect.Descriptor instead.
func (*NoticeSubscribePreference) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{2}
}

func (x *NoticeSubscribePreference) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NoticeSubscribePreference) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *NoticeSubscribePreference) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *NoticeSubscribePreference) GetAcceptCount() int64 {
	if x != nil {
		return x.AcceptCount
	}
	return 0
}

func (x *NoticeSubscribePreference) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *NoticeSubscribePreference) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type SaveNoticeSubscribePreferenceReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Openid        string                 `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	TemplateId    string                 `protobuf:"bytes,2,opt,name=templateId,proto3" json:"templateId,omitempty"`
	Type          int64                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveNoticeSubscribePreferenceReq) Reset() {
	*x = SaveNoticeSubscribePreferenceReq{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveNoticeSubscribePreferenceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveNoticeSubscribePreferenceReq) ProtoMessage() {}

func (x *SaveNoticeSubscribePreferenceReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveNoticeSubscribePreferenceReq.ProtoReflect.Descriptor instead.
func (*SaveNoticeSubscribePreferenceReq) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{3}
}

func (x *SaveNoticeSubscribePreferenceReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *SaveNoticeSubscribePreferenceReq) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *SaveNoticeSubscribePreferenceReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type SaveNoticeSubscribePreferenceResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveNoticeSubscribePreferenceResp) Reset() {
	*x = SaveNoticeSubscribePreferenceResp{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveNoticeSubscribePreferenceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveNoticeSubscribePreferenceResp) ProtoMessage() {}

func (x *SaveNoticeSubscribePreferenceResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveNoticeSubscribePreferenceResp.ProtoReflect.Descriptor instead.
func (*SaveNoticeSubscribePreferenceResp) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{4}
}

type GetNoticeSubscribePreferenceReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Openid        string                 `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	TemplateId    string                 `protobuf:"bytes,2,opt,name=templateId,proto3" json:"templateId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoticeSubscribePreferenceReq) Reset() {
	*x = GetNoticeSubscribePreferenceReq{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoticeSubscribePreferenceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoticeSubscribePreferenceReq) ProtoMessage() {}

func (x *GetNoticeSubscribePreferenceReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoticeSubscribePreferenceReq.ProtoReflect.Descriptor instead.
func (*GetNoticeSubscribePreferenceReq) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{5}
}

func (x *GetNoticeSubscribePreferenceReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetNoticeSubscribePreferenceReq) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type GetNoticeSubscribePreferenceResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Openid        string                 `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	TemplateId    string                 `protobuf:"bytes,3,opt,name=templateId,proto3" json:"templateId,omitempty"`
	AcceptCount   int64                  `protobuf:"varint,4,opt,name=acceptCount,proto3" json:"acceptCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoticeSubscribePreferenceResp) Reset() {
	*x = GetNoticeSubscribePreferenceResp{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoticeSubscribePreferenceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoticeSubscribePreferenceResp) ProtoMessage() {}

func (x *GetNoticeSubscribePreferenceResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoticeSubscribePreferenceResp.ProtoReflect.Descriptor instead.
func (*GetNoticeSubscribePreferenceResp) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{6}
}

func (x *GetNoticeSubscribePreferenceResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetNoticeSubscribePreferenceResp) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetNoticeSubscribePreferenceResp) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *GetNoticeSubscribePreferenceResp) GetAcceptCount() int64 {
	if x != nil {
		return x.AcceptCount
	}
	return 0
}

type NoticeLotteryStartReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`       //用户
	LotteryId     int64                  `protobuf:"varint,2,opt,name=lotteryId,proto3" json:"lotteryId,omitempty"` //抽奖信息
	StartTime     int64                  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"` //开始时间(时间戳)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoticeLotteryStartReq) Reset() {
	*x = NoticeLotteryStartReq{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoticeLotteryStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeLotteryStartReq) ProtoMessage() {}

func (x *NoticeLotteryStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeLotteryStartReq.ProtoReflect.Descriptor instead.
func (*NoticeLotteryStartReq) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{7}
}

func (x *NoticeLotteryStartReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NoticeLotteryStartReq) GetLotteryId() int64 {
	if x != nil {
		return x.LotteryId
	}
	return 0
}

func (x *NoticeLotteryStartReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

type NoticeLotteryStartResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"` //是否订阅成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoticeLotteryStartResp) Reset() {
	*x = NoticeLotteryStartResp{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoticeLotteryStartResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeLotteryStartResp) ProtoMessage() {}

func (x *NoticeLotteryStartResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeLotteryStartResp.ProtoReflect.Descriptor instead.
func (*NoticeLotteryStartResp) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{8}
}

func (x *NoticeLotteryStartResp) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type NoticeWishSignInReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`         //用户
	Reward        int64                  `protobuf:"varint,2,opt,name=reward,proto3" json:"reward,omitempty"`         //心愿值奖励
	Accumulate    int64                  `protobuf:"varint,3,opt,name=accumulate,proto3" json:"accumulate,omitempty"` //累计次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoticeWishSignInReq) Reset() {
	*x = NoticeWishSignInReq{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoticeWishSignInReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeWishSignInReq) ProtoMessage() {}

func (x *NoticeWishSignInReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeWishSignInReq.ProtoReflect.Descriptor instead.
func (*NoticeWishSignInReq) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{9}
}

func (x *NoticeWishSignInReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NoticeWishSignInReq) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *NoticeWishSignInReq) GetAccumulate() int64 {
	if x != nil {
		return x.Accumulate
	}
	return 0
}

type NoticeWishSignInResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoticeWishSignInResp) Reset() {
	*x = NoticeWishSignInResp{}
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoticeWishSignInResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeWishSignInResp) ProtoMessage() {}

func (x *NoticeWishSignInResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_notice_cmd_rpc_pb_notice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeWishSignInResp.ProtoReflect.Descriptor instead.
func (*NoticeWishSignInResp) Descriptor() ([]byte, []int) {
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP(), []int{10}
}

var File_app_notice_cmd_rpc_pb_notice_proto protoreflect.FileDescriptor

const file_app_notice_cmd_rpc_pb_notice_proto_rawDesc = "" +
	"\n" +
	"\"app/notice/cmd/rpc/pb/notice.proto\x12\x02pb\"N\n" +
	"\x14NoticeLotteryDrawReq\x12\x18\n" +
	"\auserIds\x18\x01 \x03(\x03R\auserIds\x12\x1c\n" +
	"\tlotteryId\x18\x02 \x01(\x03R\tlotteryId\"\x17\n" +
	"\x15NoticeLotteryDrawResp\"\xc5\x01\n" +
	"\x19NoticeSubscribePreference\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06openid\x18\x02 \x01(\tR\x06openid\x12\x1e\n" +
	"\n" +
	"templateId\x18\x03 \x01(\tR\n" +
	"templateId\x12 \n" +
	"\vacceptCount\x18\x04 \x01(\x03R\vacceptCount\x12\x1e\n" +
	"\n" +
	"createTime\x18\x05 \x01(\x03R\n" +
	"createTime\x12\x1e\n" +
	"\n" +
	"updateTime\x18\x06 \x01(\x03R\n" +
	"updateTime\"n\n" +
	" SaveNoticeSubscribePreferenceReq\x12\x16\n" +
	"\x06openid\x18\x01 \x01(\tR\x06openid\x12\x1e\n" +
	"\n" +
	"templateId\x18\x02 \x01(\tR\n" +
	"templateId\x12\x12\n" +
	"\x04type\x18\x03 \x01(\x03R\x04type\"#\n" +
	"!SaveNoticeSubscribePreferenceResp\"Y\n" +
	"\x1fGetNoticeSubscribePreferenceReq\x12\x16\n" +
	"\x06openid\x18\x01 \x01(\tR\x06openid\x12\x1e\n" +
	"\n" +
	"templateId\x18\x02 \x01(\tR\n" +
	"templateId\"\x8c\x01\n" +
	" GetNoticeSubscribePreferenceResp\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06openid\x18\x02 \x01(\tR\x06openid\x12\x1e\n" +
	"\n" +
	"templateId\x18\x03 \x01(\tR\n" +
	"templateId\x12 \n" +
	"\vacceptCount\x18\x04 \x01(\x03R\vacceptCount\"k\n" +
	"\x15NoticeLotteryStartReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\x03R\x06userId\x12\x1c\n" +
	"\tlotteryId\x18\x02 \x01(\x03R\tlotteryId\x12\x1c\n" +
	"\tstartTime\x18\x03 \x01(\x03R\tstartTime\"6\n" +
	"\x16NoticeLotteryStartResp\x12\x1c\n" +
	"\tisSuccess\x18\x01 \x01(\bR\tisSuccess\"e\n" +
	"\x13NoticeWishSignInReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06reward\x18\x02 \x01(\x03R\x06reward\x12\x1e\n" +
	"\n" +
	"accumulate\x18\x03 \x01(\x03R\n" +
	"accumulate\"\x16\n" +
	"\x14NoticeWishSignInResp2M\n" +
	"\x06notice\x12C\n" +
	"\x0eNoticeWishSign\x12\x17.pb.NoticeWishSignInReq\x1a\x18.pb.NoticeWishSignInRespB\x06Z\x04./pbb\x06proto3"

var (
	file_app_notice_cmd_rpc_pb_notice_proto_rawDescOnce sync.Once
	file_app_notice_cmd_rpc_pb_notice_proto_rawDescData []byte
)

func file_app_notice_cmd_rpc_pb_notice_proto_rawDescGZIP() []byte {
	file_app_notice_cmd_rpc_pb_notice_proto_rawDescOnce.Do(func() {
		file_app_notice_cmd_rpc_pb_notice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_app_notice_cmd_rpc_pb_notice_proto_rawDesc), len(file_app_notice_cmd_rpc_pb_notice_proto_rawDesc)))
	})
	return file_app_notice_cmd_rpc_pb_notice_proto_rawDescData
}

var file_app_notice_cmd_rpc_pb_notice_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_app_notice_cmd_rpc_pb_notice_proto_goTypes = []any{
	(*NoticeLotteryDrawReq)(nil),              // 0: pb.NoticeLotteryDrawReq
	(*NoticeLotteryDrawResp)(nil),             // 1: pb.NoticeLotteryDrawResp
	(*NoticeSubscribePreference)(nil),         // 2: pb.NoticeSubscribePreference
	(*SaveNoticeSubscribePreferenceReq)(nil),  // 3: pb.SaveNoticeSubscribePreferenceReq
	(*SaveNoticeSubscribePreferenceResp)(nil), // 4: pb.SaveNoticeSubscribePreferenceResp
	(*GetNoticeSubscribePreferenceReq)(nil),   // 5: pb.GetNoticeSubscribePreferenceReq
	(*GetNoticeSubscribePreferenceResp)(nil),  // 6: pb.GetNoticeSubscribePreferenceResp
	(*NoticeLotteryStartReq)(nil),             // 7: pb.NoticeLotteryStartReq
	(*NoticeLotteryStartResp)(nil),            // 8: pb.NoticeLotteryStartResp
	(*NoticeWishSignInReq)(nil),               // 9: pb.NoticeWishSignInReq
	(*NoticeWishSignInResp)(nil),              // 10: pb.NoticeWishSignInResp
}
var file_app_notice_cmd_rpc_pb_notice_proto_depIdxs = []int32{
	9,  // 0: pb.notice.NoticeWishSign:input_type -> pb.NoticeWishSignInReq
	10, // 1: pb.notice.NoticeWishSign:output_type -> pb.NoticeWishSignInResp
	1,  // [1:2] is the sub-list for method output_type
	0,  // [0:1] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_app_notice_cmd_rpc_pb_notice_proto_init() }
func file_app_notice_cmd_rpc_pb_notice_proto_init() {
	if File_app_notice_cmd_rpc_pb_notice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_app_notice_cmd_rpc_pb_notice_proto_rawDesc), len(file_app_notice_cmd_rpc_pb_notice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_notice_cmd_rpc_pb_notice_proto_goTypes,
		DependencyIndexes: file_app_notice_cmd_rpc_pb_notice_proto_depIdxs,
		MessageInfos:      file_app_notice_cmd_rpc_pb_notice_proto_msgTypes,
	}.Build()
	File_app_notice_cmd_rpc_pb_notice_proto = out.File
	file_app_notice_cmd_rpc_pb_notice_proto_goTypes = nil
	file_app_notice_cmd_rpc_pb_notice_proto_depIdxs = nil
}
